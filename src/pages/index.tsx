import { Question } from "@prisma/client";
import Head from "next/head";
import CreateQuestionForm from "~/components/CreateQuestionForm";
import SearchBar from "~/components/SearchBar";
import { api } from "~/utils/api";
import { capitalize } from "~/utils/strings";

export default function Home() {
  const approvedQuestions = api.questions.getAll.useQuery({ approved: true });
  const unapprovedQuestions = api.questions.getAll.useQuery({
    approved: false,
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="my-5 min-h-screen p-6 md:my-20 md:p-0">
        <div className="mx-auto flex max-w-2xl flex-col gap-6">
          <section id="hero">
            <h1 className="text-3xl font-bold md:text-5xl">
              Interview Prep Tool
            </h1>
          </section>
          <section id="interaction">
            <h3 className="mb-4 text-xl font-bold">Create questions here</h3>
            <div className="flex max-w-sm flex-col gap-4">
              <CreateQuestionForm />
              <SearchBar />
            </div>
          </section>
          <section id="questions">
            <h3 className="mb-4 text-xl font-bold text-green-700">
              Approved questions
            </h3>
            {approvedQuestions.data?.map((question, index) => (
              <Question key={index} data={question} />
            ))}

            <h3 className="mb-4 text-xl font-bold text-red-700">
              Unapproved questions
            </h3>
            {unapprovedQuestions.data?.map((question, index) => (
              <Question key={index} data={question} />
            ))}
          </section>
        </div>
      </main>
    </>
  );
}

function Question({ data }: { data: Question }) {
  if (!data) {
    return null;
  }

  // filter(Boolean) gets rid of empty objects
  const resourceList: string[] = data.resources.split(",").filter(Boolean);

  const resources = resourceList.map((r, index) => (
    <span key={index}>
      <a
        key={`resource-${r}-${index}`}
        href={r}
        target="_blank"
        rel="noreferrer noopener"
        className="font-mono text-xs hover:underline md:text-base"
      >
        {r.replace("https://", "")}
      </a>
      {index < resourceList.length - 1 && ", "}
    </span>
  ));

  return (
    <div className="mb-4 flex flex-col gap-2 rounded-lg border-2 border-gray-300 p-4">
      <p>
        <b>Technology</b>:{" "}
        <span className="font-mono">{capitalize(data.technology)}</span>
      </p>
      <p>
        <b>Question</b>: {data.title}
      </p>
      <p>
        <b>Answer</b>: {data.answer}
      </p>
      {resources.length > 0 && (
        <p className="overflow-hidden text-ellipsis">
          <b>Resources</b>: {resources}
        </p>
      )}
    </div>
  );
}
